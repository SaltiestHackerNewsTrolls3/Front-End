{"ast":null,"code":"import _toConsumableArray from\"/Users/bret/Documents/Lambda/Build Week/React/shnt/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/bret/Documents/Lambda/Build Week/React/shnt/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/Users/bret/Documents/Lambda/Build Week/React/shnt/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject(){var data=_taggedTemplateLiteral([\"\\n  width: 75%;\\n  margin: auto;\\n  height: 60vh;\\n\\n  hr {\\n    border: solid 1px #264653;\\n  }\\n\\n  p {\\n    color: #264653;\\n  }\\n\\n  .Form-error {\\n    width: 20%;\\n    margin: auto;\\n    font-size: 0.7em;\\n    color: red;\\n\\n    @media (max-width: 800px) {\\n      width: 35%;\\n    }\\n  }\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React,{useState,useEffect}from\"react\";import{Link}from\"react-router-dom\";import{withFormik,Form,Field}from\"formik\";import*as Yup from\"yup\";import axios from\"axios\";import styled from\"styled-components\";import\"../App.css\";var FormDiv=styled.div(_templateObject());var CreateAccountForm=function CreateAccountForm(_ref){var values=_ref.values,errors=_ref.errors,touched=_ref.touched,status=_ref.status;document.title=\"Create Account | SHNT\";var _useState=useState([]),_useState2=_slicedToArray(_useState,2),createAccount=_useState2[0],setCreateAccount=_useState2[1];useEffect(function(){console.log(\"status has changed!\",status);status&&setCreateAccount(function(createAccount){return[].concat(_toConsumableArray(createAccount),[status]);});},[status]);return React.createElement(FormDiv,null,React.createElement(Form,null,React.createElement(\"p\",null,\"Username:\"),React.createElement(\"label\",{htmlFor:\"username\"},React.createElement(Field,{id:\"username\",type:\"text\",name:\"username\",className:\"form-field\"}),touched.username&&errors.username&&React.createElement(\"p\",{className:\"Form-error\"},errors.username)),React.createElement(\"p\",null,\"Password:\"),React.createElement(\"label\",{htmlFor:\"password\"},React.createElement(Field,{id:\"password\",type:\"password\",name:\"password\",className:\"form-field\"}),touched.password&&errors.password&&React.createElement(\"p\",{className:\"Form-error\"},errors.password)),React.createElement(\"br\",null),React.createElement(\"button\",{type:\"submit\"},\"Create Account\")),React.createElement(Link,{to:\"/\"},React.createElement(\"button\",{className:\"back-to-signin\"},\"Go Back to Sign In\")));};var FormikCreateAccountForm=withFormik({mapPropsToValues:function mapPropsToValues(props){return{username:props.username||\"\",password:props.password||\"\"// verifypassword: props.verifypassword || \"\",\n};},validationSchema:Yup.object().shape({username:Yup.string().required(\"Username is required!\"),password:Yup.string().min(8,\"Password must be at least 8 characters!\").required(\"Password is required!\")// verifypassword: Yup.string()\n//   .oneOf([Yup.ref(\"password\"), null], \"Passwords must match!\")\n//   .required(\"Verify password is required!\")\n}),handleSubmit:function handleSubmit(values,_ref2){var setStatus=_ref2.setStatus,resetForm=_ref2.resetForm;axios.post(\"https://salt-comments.herokuapp.com/api/auth/register\",values).then(console.log(values)).then(function(res){console.log(\"success\",res);setStatus(res.data);resetForm();}).catch(function(err){return console.log(err.response);});}})(CreateAccountForm);export default FormikCreateAccountForm;","map":{"version":3,"sources":["/Users/bret/Documents/Lambda/Build Week/React/shnt/src/components /CreateAccountForm.js"],"names":["React","useState","useEffect","Link","withFormik","Form","Field","Yup","axios","styled","FormDiv","div","CreateAccountForm","values","errors","touched","status","document","title","createAccount","setCreateAccount","console","log","username","password","FormikCreateAccountForm","mapPropsToValues","props","validationSchema","object","shape","string","required","min","handleSubmit","setStatus","resetForm","post","then","res","data","catch","err","response"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { withFormik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport axios from \"axios\";\nimport styled from \"styled-components\";\nimport \"../App.css\";\n\nconst FormDiv = styled.div`\n  width: 75%;\n  margin: auto;\n  height: 60vh;\n\n  hr {\n    border: solid 1px #264653;\n  }\n\n  p {\n    color: #264653;\n  }\n\n  .Form-error {\n    width: 20%;\n    margin: auto;\n    font-size: 0.7em;\n    color: red;\n\n    @media (max-width: 800px) {\n      width: 35%;\n    }\n  }\n`;\n\nconst CreateAccountForm = ({ values, errors, touched, status }) => {\n  document.title = \"Create Account | SHNT\";\n\n  const [createAccount, setCreateAccount] = useState([]);\n\n  useEffect(() => {\n    console.log(\"status has changed!\", status);\n    status && setCreateAccount(createAccount => [...createAccount, status]);\n  }, [status]);\n\n  return (\n    <FormDiv>\n      <Form>\n        <p>Username:</p>\n        <label htmlFor=\"username\">\n          <Field id=\"username\" type=\"text\" name=\"username\" className=\"form-field\" />\n          {touched.username && errors.username && (\n            <p className=\"Form-error\">{errors.username}</p>\n          )}\n        </label>\n        <p>Password:</p>\n        <label htmlFor=\"password\">\n          <Field\n            id=\"password\"\n            type=\"password\"\n            name=\"password\"\n            className=\"form-field\"\n          />\n          {touched.password && errors.password && (\n            <p className=\"Form-error\">{errors.password}</p>\n          )}\n        </label>\n        {/* <p>Verify Password:</p>\n        <label htmlFor=\"verifypassword\">\n          <Field\n            id=\"verifypassword\"\n            type=\"password\"\n            name=\"verifypassword\"\n            className=\"form-field\"\n          />\n          {touched.verifypassword && errors.verifypassword && (\n            <p className=\"Form-error\">{errors.verifypassword}</p>\n          )}\n        </label> */}\n        <br></br>\n        <button type=\"submit\">Create Account</button>\n      </Form>\n      <Link to=\"/\">\n        <button className=\"back-to-signin\">Go Back to Sign In</button>\n      </Link>\n    </FormDiv>\n  );\n};\n\nconst FormikCreateAccountForm = withFormik({\n  mapPropsToValues(props) {\n    return {\n      username: props.username || \"\",\n      password: props.password || \"\",\n      // verifypassword: props.verifypassword || \"\",\n    };\n  },\n\n  validationSchema: Yup.object().shape({\n    username: Yup.string().required(\"Username is required!\"),\n    password: Yup.string().min(8, \"Password must be at least 8 characters!\").required(\"Password is required!\"),\n    // verifypassword: Yup.string()\n    //   .oneOf([Yup.ref(\"password\"), null], \"Passwords must match!\")\n    //   .required(\"Verify password is required!\")\n  }),\n\n  handleSubmit(values, { setStatus, resetForm }) {\n    axios\n      .post(\"https://salt-comments.herokuapp.com/api/auth/register\", values)\n      .then(console.log(values))\n      .then(res => {\n        console.log(\"success\", res);\n        setStatus(res.data)\n        resetForm();\n      })\n      .catch(err => console.log(err.response));\n  },\n})(CreateAccountForm);\n\nexport default FormikCreateAccountForm;\n"]},"metadata":{},"sourceType":"module"}