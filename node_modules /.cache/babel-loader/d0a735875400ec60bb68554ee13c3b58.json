{"ast":null,"code":"import _slicedToArray from \"/Users/bret/Documents/Lambda/Build Week/Front-End/salty-hackers/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/bret/Documents/Lambda/Build Week/Front-End/salty-hackers/src/components /CreateAccount.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport { withFormik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport axios from \"axios\";\nimport styled from \"styled-components\";\nimport \"../App.css\";\nconst FormDiv = styled.div`\n  width: 75%;\n  margin: auto;\n  height: 60vh;\n\n  hr {\n    border: solid 1px #264653;\n  }\n\n  p {\n    color: #264653;\n  }\n\n  .Form-error {\n    width: 20%;\n    margin: auto;\n    font-size: 0.7em;\n    color: red;\n\n    @media (max-width: 800px) {\n      width: 35%;\n    }\n  }\n`;\n\nconst CreateAccountForm = ({\n  values,\n  errors,\n  touched,\n  status\n}) => {\n  document.title = \"Create Account | SHNT\";\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        createAccount = _useState2[0],\n        setCreateAccount = _useState2[1];\n\n  return React.createElement(FormDiv, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"E-Mail:\"), React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(Field, {\n    id: \"email\",\n    type: \"text\",\n    name: \"email\",\n    className: \"form-field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), touched.email && errors.email && React.createElement(\"p\", {\n    className: \"Form-error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, errors.email)), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Password:\"), React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(Field, {\n    id: \"password\",\n    type: \"password\",\n    name: \"password\",\n    className: \"form-field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), touched.email && errors.password && React.createElement(\"p\", {\n    className: \"Form-error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, errors.password)), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Log In\")), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"OR\"), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }));\n};\n\nconst FormikCreateAccountForm = withFormik({\n  mapPropsToValues(props) {\n    return {\n      email: props.email || \"\",\n      password: props.password || \"\"\n    };\n  },\n\n  validationSchema: Yup.object().shape({\n    email: Yup.string().required(\"E-mail is required!\"),\n    password: Yup.string().required(\"Password is required!\")\n  }),\n\n  handleSubmit(values, {\n    setStatus,\n    resetForm\n  }) {\n    axios.post(\"https://reqres.in/api/users/\", values).then(res => {\n      console.log(\"success\", res);\n      resetForm();\n    }).catch(err => console.log(err.response));\n  }\n\n})(CreateAccountForm);\nexport default FormikCreateAccountForm;","map":{"version":3,"sources":["/Users/bret/Documents/Lambda/Build Week/Front-End/salty-hackers/src/components /CreateAccount.js"],"names":["React","useState","useEffect","BrowserRouter","Router","Route","Link","withFormik","Form","Field","Yup","axios","styled","FormDiv","div","CreateAccountForm","values","errors","touched","status","document","title","createAccount","setCreateAccount","email","password","FormikCreateAccountForm","mapPropsToValues","props","validationSchema","object","shape","string","required","handleSubmit","setStatus","resetForm","post","then","res","console","log","catch","err","response"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport { withFormik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport axios from \"axios\";\nimport styled from \"styled-components\";\nimport \"../App.css\";\n\nconst FormDiv = styled.div`\n  width: 75%;\n  margin: auto;\n  height: 60vh;\n\n  hr {\n    border: solid 1px #264653;\n  }\n\n  p {\n    color: #264653;\n  }\n\n  .Form-error {\n    width: 20%;\n    margin: auto;\n    font-size: 0.7em;\n    color: red;\n\n    @media (max-width: 800px) {\n      width: 35%;\n    }\n  }\n`;\n\nconst CreateAccountForm = ({ values, errors, touched, status }) => {\n  document.title = \"Create Account | SHNT\";\n\n  const [createAccount, setCreateAccount] = useState([]);\n\n  return (\n    <FormDiv>\n      <Form>\n        <p>E-Mail:</p>\n        <label htmlFor=\"email\">\n          <Field id=\"email\" type=\"text\" name=\"email\" className=\"form-field\" />\n          {touched.email && errors.email && (\n            <p className=\"Form-error\">{errors.email}</p>\n          )}\n        </label>\n        <p>Password:</p>\n        <label htmlFor=\"password\">\n          <Field\n            id=\"password\"\n            type=\"password\"\n            name=\"password\"\n            className=\"form-field\"\n          />\n          {touched.email && errors.password && (\n            <p className=\"Form-error\">{errors.password}</p>\n          )}\n        </label>\n        <br></br>\n        <button type=\"submit\">Log In</button>\n      </Form>\n      <p>OR</p>\n      <hr />\n    </FormDiv>\n  );\n};\n\nconst FormikCreateAccountForm = withFormik({\n  mapPropsToValues(props) {\n    return {\n      email: props.email || \"\",\n      password: props.password || \"\",\n    };\n  },\n\n  validationSchema: Yup.object().shape({\n    email: Yup.string().required(\"E-mail is required!\"),\n    password: Yup.string().required(\"Password is required!\"),\n  }),\n\n  handleSubmit(values, { setStatus, resetForm }) {\n    axios\n      .post(\"https://reqres.in/api/users/\", values)\n      .then(res => {\n        console.log(\"success\", res);\n\n        resetForm();\n      })\n      .catch(err => console.log(err.response));\n  },\n})(CreateAccountForm);\n\nexport default FormikCreateAccountForm;\n"]},"metadata":{},"sourceType":"module"}