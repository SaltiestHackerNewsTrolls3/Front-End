{"ast":null,"code":"import _slicedToArray from \"/Users/bret/Documents/Lambda/Build Week/Front-End/salty-hackers/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/bret/Documents/Lambda/Build Week/Front-End/salty-hackers/src/components /SignIn.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport { withFormik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport axios from 'axios';\nimport CreateAccount from \"./CreateAccount\";\nimport styled from 'styled-components';\nimport \"../App.css\";\nconst FormDiv = styled.div`\n    width: 75%;\n    margin: auto;\n    height: 60vh;\n`;\n\nconst SignInForm = ({\n  values,\n  errors,\n  touched,\n  status\n}) => {\n  document.title = \"Sign In | SHNT\";\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        signIn = _useState2[0],\n        setSignIn = _useState2[1];\n\n  return React.createElement(FormDiv, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"E-Mail:\"), React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(Field, {\n    id: \"email\",\n    type: \"text\",\n    name: \"email\",\n    className: \"form-field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), touched.email && errors.email && React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, errors.email)), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Password:\"), React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(Field, {\n    id: \"password\",\n    type: \"password\",\n    name: \"password\",\n    className: \"form-field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), touched.email && errors.password && React.createElement(\"p\", {\n    className: \"form-error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, errors.password)), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Log In\")), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"OR\"), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(Link, {\n    to: \"/createaccount\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Create Account\")), React.createElement(Route, {\n    exact: true,\n    path: \"/createaccount\",\n    component: CreateAccount,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }));\n};\n\nconst FormikSignInForm = withFormik({\n  mapPropsToValues(props) {\n    return {\n      email: props.email || \"\",\n      password: props.password || \"\"\n    };\n  },\n\n  validationSchema: Yup.object().shape({\n    email: Yup.string().required(),\n    password: Yup.string().required(\"Password is \")\n  }),\n\n  handleSubmit(values, {\n    setStatus,\n    resetForm\n  }) {\n    axios.post(\"https://reqres.in/api/users/\", values).then(res => {\n      console.log(\"success\", res);\n      resetForm();\n    }).catch(err => console.log(err.response));\n  }\n\n})(SignInForm);\nexport default FormikSignInForm;","map":{"version":3,"sources":["/Users/bret/Documents/Lambda/Build Week/Front-End/salty-hackers/src/components /SignIn.js"],"names":["React","useState","useEffect","BrowserRouter","Router","Route","Link","withFormik","Form","Field","Yup","axios","CreateAccount","styled","FormDiv","div","SignInForm","values","errors","touched","status","document","title","signIn","setSignIn","email","password","FormikSignInForm","mapPropsToValues","props","validationSchema","object","shape","string","required","handleSubmit","setStatus","resetForm","post","then","res","console","log","catch","err","response"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport { withFormik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport axios from 'axios';\nimport CreateAccount from \"./CreateAccount\";\nimport styled from 'styled-components';\nimport \"../App.css\";\n\nconst FormDiv = styled.div`\n    width: 75%;\n    margin: auto;\n    height: 60vh;\n`;\n\nconst SignInForm = ({ values, errors, touched, status }) => {\n  document.title = \"Sign In | SHNT\";\n\n  const [signIn, setSignIn] = useState([]);\n\n  return (\n    <FormDiv>\n      <Form>\n          <p>E-Mail:</p>\n        <label htmlFor=\"email\">\n          <Field id=\"email\" type=\"text\" name=\"email\" className=\"form-field\" />\n          {touched.email && errors.email && <p>{errors.email}</p>}\n        </label>\n        <p>Password:</p>\n        <label htmlFor=\"password\">\n            <Field id=\"password\" type=\"password\" name=\"password\" className=\"form-field\" />\n  {touched.email && errors.password && <p className=\"form-error\">{errors.password}</p>}\n        </label>\n        <br></br>\n        <button type=\"submit\">Log In</button>\n      </Form>\n      <p>OR</p>\n      <hr/>\n      <Link to=\"/createaccount\"><button>Create Account</button></Link>\n      <Route exact path=\"/createaccount\" component={CreateAccount} />\n    </FormDiv>\n  );\n};\n\nconst FormikSignInForm = withFormik({\n  mapPropsToValues(props) {\n    return {\n      email: props.email || \"\",\n      password: props.password || \"\",\n    };\n  },\n\n  validationSchema: Yup.object().shape({\n      email: Yup.string().required(),\n      password: Yup.string().required(\"Password is \")\n  }),\n\n  handleSubmit(values, { setStatus, resetForm }) {\n      axios\n      .post(\"https://reqres.in/api/users/\", values)\n      .then (res => {\n          console.log(\"success\", res);\n\n          resetForm();\n      })\n      .catch(err => console.log(err.response));\n  }\n})(SignInForm);\n\nexport default FormikSignInForm;\n"]},"metadata":{},"sourceType":"module"}