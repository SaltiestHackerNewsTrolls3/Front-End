{"ast":null,"code":"import _slicedToArray from \"/Users/bret/Documents/Lambda/Build Week/Front-End/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/bret/Documents/Lambda/Build Week/Front-End/src/components /CreateAccountForm.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { withFormik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport axios from \"axios\";\nimport styled from \"styled-components\";\nimport \"../App.css\";\nconst FormDiv = styled.div`\n  width: 75%;\n  margin: auto;\n  height: 60vh;\n\n  hr {\n    border: solid 1px #264653;\n  }\n\n  p {\n    color: #264653;\n  }\n\n  .Form-error {\n    width: 20%;\n    margin: auto;\n    font-size: 0.7em;\n    color: red;\n\n    @media (max-width: 800px) {\n      width: 35%;\n    }\n  }\n`;\n\nconst CreateAccountForm = ({\n  values,\n  errors,\n  touched,\n  status\n}) => {\n  document.title = \"Create Account | SHNT\";\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        createAccount = _useState2[0],\n        setCreateAccount = _useState2[1];\n\n  useEffect(() => {\n    console.log(\"status has changed!\", status);\n    status && setCreateAccount(createAccount => [...createAccount, status]);\n  }, [status]);\n  return React.createElement(FormDiv, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Username:\"), React.createElement(\"label\", {\n    htmlFor: \"username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(Field, {\n    id: \"username\",\n    type: \"text\",\n    name: \"username\",\n    className: \"form-field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), touched.username && errors.username && React.createElement(\"p\", {\n    className: \"Form-error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, errors.username)), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Password:\"), React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(Field, {\n    id: \"password\",\n    type: \"password\",\n    name: \"password\",\n    className: \"form-field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), touched.password && errors.password && React.createElement(\"p\", {\n    className: \"Form-error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, errors.password)), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"Create Account\")), React.createElement(Link, {\n    to: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"back-to-signin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"Go Back to Sign In\")));\n};\n\nconst FormikCreateAccountForm = withFormik({\n  mapPropsToValues(props) {\n    return {\n      username: props.username || \"\",\n      password: props.password || \"\" // verifypassword: props.verifypassword || \"\",\n\n    };\n  },\n\n  validationSchema: Yup.object().shape({\n    username: Yup.string().required(\"Username is required!\"),\n    password: Yup.string().min(8, \"Password must be at least 8 characters!\").required(\"Password is required!\") // verifypassword: Yup.string()\n    //   .oneOf([Yup.ref(\"password\"), null], \"Passwords must match!\")\n    //   .required(\"Verify password is required!\")\n\n  }),\n\n  handleSubmit(values, {\n    setStatus,\n    resetForm\n  }) {\n    axios.post(\"https://salt-comments.herokuapp.com/api/auth/register\", values).then(console.log(values)).then(res => {\n      console.log(\"success\", res);\n      setStatus(res.data);\n      resetForm();\n    }).catch(err => console.log(err.response));\n  }\n\n})(CreateAccountForm);\nexport default FormikCreateAccountForm;","map":{"version":3,"sources":["/Users/bret/Documents/Lambda/Build Week/Front-End/src/components /CreateAccountForm.js"],"names":["React","useState","useEffect","Link","withFormik","Form","Field","Yup","axios","styled","FormDiv","div","CreateAccountForm","values","errors","touched","status","document","title","createAccount","setCreateAccount","console","log","username","password","FormikCreateAccountForm","mapPropsToValues","props","validationSchema","object","shape","string","required","min","handleSubmit","setStatus","resetForm","post","then","res","data","catch","err","response"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { withFormik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport axios from \"axios\";\nimport styled from \"styled-components\";\nimport \"../App.css\";\n\nconst FormDiv = styled.div`\n  width: 75%;\n  margin: auto;\n  height: 60vh;\n\n  hr {\n    border: solid 1px #264653;\n  }\n\n  p {\n    color: #264653;\n  }\n\n  .Form-error {\n    width: 20%;\n    margin: auto;\n    font-size: 0.7em;\n    color: red;\n\n    @media (max-width: 800px) {\n      width: 35%;\n    }\n  }\n`;\n\nconst CreateAccountForm = ({ values, errors, touched, status }) => {\n  document.title = \"Create Account | SHNT\";\n\n  const [createAccount, setCreateAccount] = useState([]);\n\n  useEffect(() => {\n    console.log(\"status has changed!\", status);\n    status && setCreateAccount(createAccount => [...createAccount, status]);\n  }, [status]);\n\n  return (\n    <FormDiv>\n      <Form>\n        <p>Username:</p>\n        <label htmlFor=\"username\">\n          <Field id=\"username\" type=\"text\" name=\"username\" className=\"form-field\" />\n          {touched.username && errors.username && (\n            <p className=\"Form-error\">{errors.username}</p>\n          )}\n        </label>\n        <p>Password:</p>\n        <label htmlFor=\"password\">\n          <Field\n            id=\"password\"\n            type=\"password\"\n            name=\"password\"\n            className=\"form-field\"\n          />\n          {touched.password && errors.password && (\n            <p className=\"Form-error\">{errors.password}</p>\n          )}\n        </label>\n        {/* <p>Verify Password:</p>\n        <label htmlFor=\"verifypassword\">\n          <Field\n            id=\"verifypassword\"\n            type=\"password\"\n            name=\"verifypassword\"\n            className=\"form-field\"\n          />\n          {touched.verifypassword && errors.verifypassword && (\n            <p className=\"Form-error\">{errors.verifypassword}</p>\n          )}\n        </label> */}\n        <br></br>\n        <button type=\"submit\">Create Account</button>\n      </Form>\n      <Link to=\"/\">\n        <button className=\"back-to-signin\">Go Back to Sign In</button>\n      </Link>\n    </FormDiv>\n  );\n};\n\nconst FormikCreateAccountForm = withFormik({\n  mapPropsToValues(props) {\n    return {\n      username: props.username || \"\",\n      password: props.password || \"\",\n      // verifypassword: props.verifypassword || \"\",\n    };\n  },\n\n  validationSchema: Yup.object().shape({\n    username: Yup.string().required(\"Username is required!\"),\n    password: Yup.string().min(8, \"Password must be at least 8 characters!\").required(\"Password is required!\"),\n    // verifypassword: Yup.string()\n    //   .oneOf([Yup.ref(\"password\"), null], \"Passwords must match!\")\n    //   .required(\"Verify password is required!\")\n  }),\n\n  handleSubmit(values, { setStatus, resetForm }) {\n    axios\n      .post(\"https://salt-comments.herokuapp.com/api/auth/register\", values)\n      .then(console.log(values))\n      .then(res => {\n        console.log(\"success\", res);\n        setStatus(res.data)\n        resetForm();\n      })\n      .catch(err => console.log(err.response));\n  },\n})(CreateAccountForm);\n\nexport default FormikCreateAccountForm;\n"]},"metadata":{},"sourceType":"module"}